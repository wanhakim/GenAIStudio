- name: Setup GenAI Studio
  hosts: localhost
  vars_files:
    - ../vars.yml

  tasks:

    - name: Check if studio namespace exists
      command: kubectl get namespace studio
      register: studio_namespace
      ignore_errors: yes
    
    - name: Create studio namespace
      command: kubectl create namespace studio
      when: studio_namespace.rc != 0

    - name: Check for coredns service
      shell: kubectl get svc coredns -n kube-system --ignore-not-found
      register: coredns_check
      ignore_errors: yes
      changed_when: false

    - name: Update manifest if coredns is available
      shell: sed -i 's/kube-dns/coredns/g' ../manifests/studio-manifest.yaml
      when: coredns_check.stdout != ''

    - name: Check if app-tls exists in studio namespace
      command: kubectl get secret app-tls -n studio
      register: app_tls_secret_check
      ignore_errors: yes

    - name: Generate TLS certificate and create app-tls
      shell: |
        openssl req -x509 -nodes -days 365 -newkey rsa:4096 -keyout app-tls.key -out app-tls.crt -subj "/CN=studio/O=studio"
        kubectl create secret generic app-tls --from-file=app-tls.crt --from-file=app-tls.key -n studio
        rm app-tls.key app-tls.crt
      when: app_tls_secret_check.rc != 0

    - name: Apply studio configuration
      command: kubectl apply -f ../studio-config.yaml

    - name: Apply customized studio manifest
      shell: "envsubst '${REGISTRY} ${TAG} ${HTTP_PROXY} ${NO_PROXY} ${MYSQL_HOST}' < ../manifests/studio-manifest.yaml | kubectl apply -f -"
      environment:
        REGISTRY: "{{ container_registry }}"
        TAG: "{{ container_tag }}"
        HTTP_PROXY: "{{ http_proxy }}"
        NO_PROXY: "{{ no_proxy }}"
        MYSQL_HOST: "{{ mysql_host }}"

    - name: Wait for all pods to be ready in studio namespace
      shell: kubectl wait --for=condition=ready pod --all --namespace=studio --timeout=600s
      register: pod_ready_check
      failed_when: pod_ready_check.rc != 0
      changed_when: false